{"version":3,"sources":["config/constants.js","config/formatAPI.js","config/api.js","store/reducers/auth.js","store/actionTypes.js","store/reducers/root.js","store/index.js","components/Header.js","components/NavigationDrawer.js","components/Layout.js","store/actions.js","components/Forms/LoginForm.js","components/Forms/RegisterForm.js","components/LoadingIndicator.js","pages/AuthPage.js","pages/LogoutPage.js","utils/useAPIData.js","components/ActivitySelect.js","components/Forms/ShortcutForm.js","components/Dialogs/CreateShortcutDialog.js","components/Shortcuts.js","utils/index.js","components/Forms/PerfomedActivityForm.js","components/Draggable.js","components/Swipeable.js","components/Dialogs/EditPerformedActivityDialog.js","components/PerformedActivitesForDate.js","pages/TodayPage.js","pages/AllTimePage.js","components/CategorySelect.js","components/Forms/ActivityForm.js","components/Dialogs/EditActivityDialog.js","components/ActivityList.js","pages/ActivitiesPage.js","components/Forms/CategoryForm.js","components/Dialogs/EditCategoryDialog.js","components/CategoryList.js","pages/CategoriesPage.js","pages/AnalysisPage.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","window","location","origin","NAV_DRAWER_LINKS","title","to","icon","AccountCircle","ExitToApp","Today","History","FormatListBulleted","Category","Assessment","formatPerformedActivities","activities","map","activity","finished_at","moment","utcOffset","formatPerformedActivity","formatShortcuts","shortcuts","shortcut","icons","formatShortcut","format","type","fn","data","Object","values","Promise","resolve","setTokenHeader","token","axios","defaults","headers","common","url","path","login","post","register","getProfile","get","getAllCategories","createCategory","updateCategory","put","deleteCategory","delete","getAllActivities","createActivity","updateActivity","deleteActivity","getAllPerformedActivities","then","getAllPerformedActivitiesByDate","getPerformedActivitiesByDate","date","createPerformedActivity","updatePerformedActivity","deletePerformedActivity","getAllShortcuts","createShortcut","deleteShortcut","initialState","localStorage","getItem","user","isLoggedIn","authReducer","state","action","setItem","removeItem","rootReducer","combineReducers","auth","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","theme","appBar","backgroundColor","palette","background","default","boxShadow","flexGrow","fontWeight","marginLeft","Header","onMenuClick","useSelector","classes","AppBar","className","position","Toolbar","IconButton","edge","onClick","Typography","variant","color","innerDrawer","width","head","padding","spacing","paddingBottom","NavigationDrawer","open","onOpen","onClose","history","useHistory","email","Drawer","anchor","PaperProps","section","i","Fragment","key","List","entry","j","ListItem","button","push","ListItemIcon","React","createElement","ListItemText","length","Divider","main","margin","props","Layout","children","HeaderProps","useState","isNavDrawerOpen","setIsNavDrawerOpen","marginBottom","textAlign","letterSpacing","alternateTitle","LoginForm","dispatch","useDispatch","useForm","handleSubmit","setError","errors","isErrorOpen","setIsErrorOpen","onSubmit","a","password","res","loginAction","catch","error","response","status","message","clsx","noValidate","TextField","label","name","inputRef","fullWidth","helperText","Button","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","RegisterForm","confirm_password","apiRegister","container","display","justifyContent","alignItems","LoadingIndicator","CircularProgress","height","flexDirection","form","fab","bottom","right","marginRight","close","top","left","AuthPage","shouldLogin","showRegisterForm","setShowRegisterForm","isLoading","setIsLoading","useEffect","finally","style","Fab","LogoutPage","useAPIData","method","API","bind","Error","defaultValue","setData","useReducer","reloadKey","reload","console","divider","ActivitySelect","filter","renderActivities","toLowerCase","startsWith","Paper","elevation","id","input","marginTop","submitButton","ShortcutForm","watch","reset","getValues","setValue","setActivity","autoComplete","InputProps","endAdornment","InputAdornment","href","target","activity_id","CreateShortcutDialog","Dialog","DialogTitle","DialogContent","overflowX","chip","Shortcuts","isCreateModalOpen","setIsCreateModalOpen","Chip","onDelete","handleDelete","clickable","preventDefault","event","options","passive","getPositionFromEvent","touches","x","clientX","y","clientY","roundMinutesTo","time","minutes","ms","Math","round","opacity","primaryInputs","timeDisplay","fontSize","PerfomedActivityForm","defaultValues","control","isDatePickerOpen","setIsDatePickerOpen","render","onChange","value","TimePicker","ampm","Draggable","onDragStart","onDrag","onDragStop","lastPos","useRef","isStart","setIsStart","isDraggingDisabled","setIsDraggingDisabled","handleDragStart","current","handleDrag","pos","deltaX","deltaY","abs","addEventListener","handleDragStop","removeEventListener","cloneElement","Children","only","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","Swipeable","swipeLeftConfig","swipeRightConfig","onSwipeRight","onSwipeLeft","useTheme","containerRef","childRef","setPosition","setIcon","dark","DeleteIcon","moveOutOfScreen","primary","EditIcon","moveToInitialPosition","anime","targets","translateX","duration","easing","autoplay","complete","sign","offsetWidth","setColor","roundCorners","side","borderRadius","transform","transition","shadows","zIndex","ref","newX","handleSwipeLeft","handleSwipeRight","EditPerformedActivityDialog","activity_name","item","paper","itemInnerWrapper","itemPrimary","itemSecondary","Entry","reloadList","isEditDialogOpen","setIsEditDialogOpen","secondary","category","forwardRef","useMemo","sort","b","unix","sortActivities","useImperativeHandle","TodayPage","list","accordionDetails","AllTimePage","keys","Accordion","TransitionProps","unmountOnExit","AccordionSummary","AccordionDetails","root","CategorySelect","renderCategories","ActivityForm","showAllCategories","submitText","categoryId","setCategoryId","category_id","EditActivityDialog","category_name","overflow","listItem","lineHeight","localeCompare","ActivitiesPage","CategoryForm","EditCategoryDialog","CategoriesPage","AnalysisPage","Router","basename","App","CssBaseline","Boolean","hostname","match","createMuiTheme","ReactDOM","ThemeProvider","utils","MomentUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20e7eac6.chunk.js","sourcesContent":["import AccountCircle from \"@material-ui/icons/AccountCircle\"\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\"\r\nimport Today from \"@material-ui/icons/Today\"\r\nimport History from \"@material-ui/icons/History\"\r\nimport Category from \"@material-ui/icons/Category\"\r\nimport FormatListBulleted from \"@material-ui/icons/FormatListBulleted\"\r\nimport Assessment from \"@material-ui/icons/Assessment\"\r\n\r\nexport const API_BASE_URL = window.location.origin + \"/api\"\r\n\r\nexport const NAV_DRAWER_LINKS = [\r\n    [\r\n        {\r\n            title: \"Profile\",\r\n            to: \"/profile\",\r\n            icon: AccountCircle\r\n        },\r\n        {\r\n            title: \"Logout\",\r\n            to: \"/logout\",\r\n            icon: ExitToApp\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            title: \"Today\",\r\n            to: \"/today\",\r\n            icon: Today\r\n        },\r\n        {\r\n            title: \"All Time\",\r\n            to: \"/all-time\",\r\n            icon: History\r\n        },\r\n        {\r\n            title: \"Activities\",\r\n            to: \"/activities\",\r\n            icon: FormatListBulleted\r\n        },\r\n        {\r\n            title: \"Categories\",\r\n            to: \"/categories\",\r\n            icon: Category\r\n        },\r\n        {\r\n            title: \"Analysis\",\r\n            to: \"/analysis\",\r\n            icon: Assessment\r\n        }\r\n    ]\r\n]\r\n\r\nexport const UTC_OFFSET = \"+02:00\"","import moment from \"moment\"\r\nimport * as icons from \"@material-ui/icons\"\r\n\r\nimport { UTC_OFFSET } from \"./constants.js\"\r\n\r\nexport const PERFORMED_ACTIVITIES = \"PERFORMED_ACTIVITIES\"\r\nexport const PERFORMED_ACTIVITIES_BY_DATE = \"PERFORMED_ACTIVITIES_BY_DATE\"\r\nexport const SHORTCUTS = \"SHORTCUTS\"\r\n\r\nfunction formatPerformedActivity(activity) {\r\n    activity.finished_at = moment(activity.finished_at).utcOffset(UTC_OFFSET)\r\n    \r\n    return activity\r\n}\r\n\r\nfunction formatPerformedActivities(activities) {\r\n    return activities.map(activity => formatPerformedActivity(activity))\r\n}\r\n\r\nfunction formatShortcut(shortcut) {\r\n    shortcut.icon = icons[shortcut.icon]\r\n\r\n    return shortcut\r\n}\r\n\r\nfunction formatShortcuts(shortcuts) {\r\n    return shortcuts.map(shortcut => formatShortcut(shortcut))\r\n}\r\n\r\nexport default function format(type) {\r\n    let fn\r\n\r\n    if(type === PERFORMED_ACTIVITIES) {\r\n        fn = data => formatPerformedActivities(data.data)\r\n    } else if (type === PERFORMED_ACTIVITIES_BY_DATE) {\r\n        fn = data => Object.values(data.data).map(formatPerformedActivities)\r\n    } else if (type === SHORTCUTS) {\r\n        fn = data => formatShortcuts(data.data)\r\n    }\r\n\r\n    return (data) => {\r\n        return new Promise(resolve => {\r\n            fn(data)\r\n            resolve(data)\r\n        })\r\n    }\r\n}","import axios from \"axios\"\r\n\r\nimport format, {\r\n    PERFORMED_ACTIVITIES,\r\n    PERFORMED_ACTIVITIES_BY_DATE,\r\n    SHORTCUTS\r\n} from \"./formatAPI.js\"\r\nimport { API_BASE_URL } from \"./constants.js\"\r\n\r\nexport function setTokenHeader(token) {\r\n    axios.defaults.headers.common = {\r\n        \"Authorization\": \"Baerer \" + token\r\n    }\r\n}\r\n\r\nfunction url(path) {\r\n    return API_BASE_URL + path\r\n}\r\n\r\nexport const login = (data) => axios.post(url(\"/auth/login\"), data)\r\nexport const register = (data) => axios.post(url(\"/auth/register\"), data)\r\nexport const getProfile = () => axios.get(url(\"/auth\"))\r\n\r\nexport const getAllCategories = () => axios.get(url(\"/categories\"))\r\nexport const createCategory = (data) => axios.post(url(\"/categories\"), data)\r\nexport const updateCategory = (data) => axios.put(url(\"/categories\"), data)\r\nexport const deleteCategory = (data) => axios.delete(url(\"/categories\"), { data })\r\n\r\nexport const getAllActivities = () => axios.get(url(\"/activities\"))\r\nexport const createActivity = (data) => axios.post(url(\"/activities\"), data)\r\nexport const updateActivity = (data) => axios.put(url(\"/activities\"), data)\r\nexport const deleteActivity = (data) => axios.delete(url(\"/activities\"), { data })\r\n\r\nexport const getAllPerformedActivities = () => axios.get(url(\"/performed-activities\")).then(format(PERFORMED_ACTIVITIES))\r\nexport const getAllPerformedActivitiesByDate = () => axios.get(url(\"/performed-activities/date\")).then(format(PERFORMED_ACTIVITIES_BY_DATE))\r\nexport const getPerformedActivitiesByDate = (data) => axios.get(url(`/performed-activities/date?date=${data.date}`)).then(format(PERFORMED_ACTIVITIES))\r\nexport const createPerformedActivity = (data) => axios.post(url(\"/performed-activities\"), data)\r\nexport const updatePerformedActivity = (data) => axios.put(url(\"/performed-activities\"), data)\r\nexport const deletePerformedActivity = (data) => axios.delete(url(\"/performed-activities\"), { data })\r\n\r\nexport const getAllShortcuts = () => axios.get(url(\"/shortcuts\")).then(format(SHORTCUTS))\r\nexport const createShortcut = (data) => axios.post(url(\"/shortcuts\"), data)\r\nexport const deleteShortcut = (data) => axios.delete(url(\"/shortcuts\"), { data })","import { LOGIN, LOGOUT } from \"../actionTypes.js\"\r\nimport { setTokenHeader } from \"../../config/api.js\"\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    user: null,\r\n    isLoggedIn: false\r\n}\r\n\r\nsetTokenHeader(localStorage.getItem(\"token\"))\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LOGIN:\r\n            localStorage.setItem(\"token\", action.token)\r\n            setTokenHeader(action.token)\r\n\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                user: action.user,\r\n                isLoggedIn: true\r\n            }\r\n        \r\n        case LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            setTokenHeader(null)\r\n\r\n            return {\r\n                ...initialState,\r\n                token: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","export const LOGIN = \"LOGIN\"\r\nexport const LOGOUT = \"LOGOUT\"","import { combineReducers } from \"redux\"\r\n\r\nimport auth from \"./auth.js\"\r\n\r\nconst rootReducer = combineReducers({\r\n    auth\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\"\r\n\r\nimport rootReducer from \"./reducers/root.js\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__?.()\r\n)\r\n\r\nexport default store","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        backgroundColor: theme.palette.background.default,\r\n        boxShadow: \"none\"\r\n    },\r\n\r\n    title: {\r\n        flexGrow: 1,\r\n        fontWeight: \"medium\",\r\n        marginLeft: 20\r\n    }\r\n}))\r\n\r\nfunction Header({ title, onMenuClick }) {\r\n    const isLoggedIn = useSelector(store => store.auth.isLoggedIn)\r\n\r\n    const classes = useStyles()\r\n\r\n    if(!isLoggedIn) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <AppBar className={classes.appBar} position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" onClick={onMenuClick}>\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n\r\n                <Typography variant=\"h6\" className={classes.title} color=\"textPrimary\">\r\n                    {title}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Drawer, List, ListItem, ListItemText, ListItemIcon, Divider, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { NAV_DRAWER_LINKS } from \"../config/constants.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    innerDrawer: {\r\n        width: 256\r\n    },\r\n\r\n    head: {\r\n        padding: theme.spacing(2),\r\n        paddingBottom: 0\r\n    }\r\n}))\r\n\r\nfunction NavigationDrawer({ open, onOpen, onClose }) {\r\n    const history = useHistory()\r\n\r\n    const email = useSelector(store => store.auth.user?.email)\r\n\r\n    const classes = useStyles()\r\n\r\n    const redirect = (to) => {\r\n        onClose()\r\n        history.push(to)\r\n    }\r\n    \r\n    return (\r\n        <Drawer\r\n            open={open}\r\n            onOpen={onOpen}\r\n            onClose={onClose}\r\n            anchor=\"left\"\r\n            PaperProps={{ className: classes.innerDrawer }}\r\n        >\r\n            <div className={classes.head}>\r\n                <Typography variant=\"subtitle1\">{ email }</Typography>\r\n            </div>\r\n\r\n            { /* TODO: Icons */ }\r\n\r\n            {NAV_DRAWER_LINKS.map((section, i) => (\r\n                <React.Fragment key={i}>\r\n                    <List>\r\n                        {section.map((entry, j) => (\r\n                            <ListItem button onClick={() => redirect(entry.to)} key={j}>\r\n                                <ListItemIcon>\r\n                                    {React.createElement(entry.icon)}\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText>{ entry.title }</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n\r\n                    { i < NAV_DRAWER_LINKS.length - 1 && <Divider/> }\r\n                </React.Fragment>\r\n            ))}\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default NavigationDrawer","import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Header from \"./Header.js\"\r\nimport NavigationDrawer from \"./NavigationDrawer.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        margin: props => `0 ${theme.spacing(2)}px ${theme.spacing(4)}px`\r\n    }\r\n}))\r\n\r\nfunction Layout({ children, HeaderProps = {} }) {\r\n    const isLoggedIn = useSelector(store => store.auth.isLoggedIn)\r\n\r\n    const classes = useStyles({ isLoggedIn })\r\n\r\n    const [isNavDrawerOpen, setIsNavDrawerOpen] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Header onMenuClick={() => setIsNavDrawerOpen(true)} {...HeaderProps}/>\r\n\r\n            <NavigationDrawer\r\n                open={isNavDrawerOpen}\r\n                onClose={() => setIsNavDrawerOpen(false)}\r\n            />\r\n\r\n            <div className={classes.main}>\r\n                { children }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout","import { LOGIN, LOGOUT } from \"./actionTypes.js\"\r\n\r\nexport function login({ token, user }) {\r\n    return {\r\n        type: LOGIN,\r\n        token,\r\n        user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: LOGOUT\r\n    }\r\n}","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport clsx from \"clsx\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Typography, TextField, Button, Snackbar, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport { login } from \"../../config/api.js\"\r\nimport { login as loginAction } from \"../../store/actions.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    spacing: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontWeight: 500,\r\n        letterSpacing: 2\r\n    },\r\n\r\n    alternateTitle: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"lighter\"\r\n    }\r\n}))\r\n\r\nfunction LoginForm({ className }) {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, setError, errors } = useForm()\r\n\r\n    const [isErrorOpen, setIsErrorOpen] = useState(false)\r\n\r\n    const onSubmit = async (values) => {\r\n        if(!values.email || !values.password) {\r\n            return\r\n        }\r\n        \r\n        login(values)\r\n            .then(res => {\r\n                dispatch(loginAction(res.data))\r\n            })\r\n            .catch((error) => {\r\n                if(error.response.status === 404) {\r\n                    // Email address not found\r\n                    setError(\"email\", { message: \"Email Not found\" })\r\n                } else if (error.response.status === 401) {\r\n                    // Invalid password\r\n                    setError(\"password\", { message: \"Wrong password\" })\r\n                } else {\r\n                    setIsErrorOpen(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Typography variant=\"h5\" color=\"textPrimary\" className={clsx(classes.spacing, classes.title)}>LOGIN</Typography>\r\n\r\n            <form noValidate onSubmit={handleSubmit(onSubmit)} className={classes.spacing}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    inputRef={register()}\r\n                    className={classes.spacing}\r\n                    fullWidth\r\n                    error={!!errors.email}\r\n                    helperText={errors.email?.message}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    inputRef={register()}\r\n                    className={classes.spacing}\r\n                    fullWidth\r\n                    error={!!errors.password}\r\n                    helperText={errors.password?.message}\r\n                />\r\n\r\n                <Button variant=\"outlined\" color=\"primary\" fullWidth type=\"submit\">Login</Button>\r\n            </form>\r\n\r\n            <Typography variant=\"h5\" color=\"textPrimary\" className={clsx(classes.spacing, classes.alternateTitle)}>OR</Typography>\r\n\r\n            {isErrorOpen && (\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"right\"\r\n                    }}\r\n                    open={isErrorOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={() => setIsErrorOpen(false)}\r\n                    message=\"Login failed\"\r\n                    action={\r\n                        <IconButton onClick={() => setIsErrorOpen(false)} color=\"secondary\">\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport clsx from \"clsx\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Typography, TextField, Button, Snackbar, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport { register as apiRegister } from \"../../config/api.js\"\r\nimport { login as loginAction } from \"../../store/actions.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    spacing: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontWeight: 500,\r\n        letterSpacing: 2\r\n    },\r\n\r\n    alternateTitle: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"lighter\"\r\n    }\r\n}))\r\n\r\nfunction RegisterForm({ className }) {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, setError, errors } = useForm()\r\n\r\n    const [isErrorOpen, setIsErrorOpen] = useState(false)\r\n\r\n    const onSubmit = async (values) => {\r\n        if(!values.email || !values.password) {\r\n            return\r\n        }\r\n\r\n        if(values.password !== values.confirm_password) {\r\n            setError(\"confirm_password\", { message: \"Passwords do not match\" })\r\n            return\r\n        }\r\n\r\n        apiRegister(values)\r\n            .then(res => {\r\n                dispatch(loginAction(res.data))\r\n            })\r\n            .catch((error) => {\r\n                if(error.response.status === 409) {\r\n                    // Email already exists\r\n                    setError(\"email\", { message: \"Email is already taken\" })\r\n                } else {\r\n                    setIsErrorOpen(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Typography variant=\"h5\" color=\"textPrimary\" className={clsx(classes.spacing, classes.title)}>REGISTER</Typography>\r\n\r\n            <form noValidate onSubmit={handleSubmit(onSubmit)} className={classes.spacing}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    inputRef={register()}\r\n                    className={classes.spacing}\r\n                    fullWidth\r\n                    error={!!errors.email}\r\n                    helperText={errors.email?.message}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    inputRef={register()}\r\n                    className={classes.spacing}\r\n                    fullWidth\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Confirm Password\"\r\n                    name=\"confirm_password\"\r\n                    type=\"password\"\r\n                    inputRef={register()}\r\n                    className={classes.spacing}\r\n                    fullWidth\r\n                    error={!!errors.confirm_password}\r\n                    helperText={errors.confirm_password?.message}\r\n                />\r\n\r\n                <Button variant=\"outlined\" color=\"primary\" fullWidth type=\"submit\">Register</Button>\r\n            </form>\r\n\r\n            {isErrorOpen && (\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"right\"\r\n                    }}\r\n                    open={isErrorOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={() => setIsErrorOpen(false)}\r\n                    message=\"Registration failed\"\r\n                    action={\r\n                        <IconButton onClick={() => setIsErrorOpen(false)}>\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm","import React from \"react\"\r\nimport { CircularProgress } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}))\r\n\r\nfunction LoadingIndicator() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <CircularProgress/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingIndicator","import React, { useEffect, useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { IconButton, Fab } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\nimport LoginForm from \"../components/Forms/LoginForm.js\"\r\nimport RegisterForm from \"../components/Forms/RegisterForm.js\"\r\nimport LoadingIndicator from \"../components/LoadingIndicator.js\"\r\nimport { getProfile } from \"../config/api.js\"\r\nimport { login as loginAction } from \"../store/actions.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingBottom: theme.spacing(4) + 48\r\n    },\r\n\r\n    form: {\r\n        padding: `0 ${theme.spacing(2)}px`\r\n    },\r\n\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(2),\r\n\r\n        \"& .MuiFab-label\": {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n\r\n            \"& svg\": {\r\n                marginRight: theme.spacing(1)\r\n            }\r\n        }\r\n    },\r\n\r\n    close: {\r\n        position: \"absolute\",\r\n        top: theme.spacing(4) - 12,\r\n        left: theme.spacing(4) - 12\r\n    }\r\n}))\r\n\r\nfunction AuthPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector(state => state.auth.isLoggedIn)\r\n    const token = useSelector(state => state.auth.token)\r\n\r\n    const shouldLogin = token && !isLoggedIn\r\n\r\n    const [showRegisterForm, setShowRegisterForm] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(shouldLogin)\r\n\r\n    const classes = useStyles({ showRegisterForm })\r\n\r\n    // Try login if token is set\r\n    useEffect(() => {\r\n        if (shouldLogin) {\r\n            getProfile()\r\n                .then(res => dispatch(loginAction({\r\n                    user: res.data,\r\n                    token\r\n                })))\r\n                .catch(() => localStorage.removeItem(\"token\"))\r\n                .finally(() => setIsLoading(false))\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <Layout>\r\n            <div className={classes.container} style={{ paddingBottom: showRegisterForm && \"0\" }}>\r\n                {isLoading ? (\r\n                    <LoadingIndicator />\r\n                ) : showRegisterForm ? (\r\n                    <>\r\n                        <IconButton onClick={() => setShowRegisterForm(false)} className={classes.close}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n\r\n                        <RegisterForm className={classes.form} />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <LoginForm className={classes.form} />\r\n\r\n                        <Fab variant=\"extended\" color=\"secondary\" className={classes.fab} onClick={() => setShowRegisterForm(true)}>\r\n                            <AddIcon />\r\n                            Register\r\n                        </Fab>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AuthPage","import React, { useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\nimport { logout } from \"../store/actions.js\"\r\n\r\nfunction LogoutPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(logout())\r\n        history.push(\"/\")\r\n    }, [dispatch, history])\r\n\r\n    return (\r\n        <Layout\r\n            HeaderProps={{\r\n                title: \"Logout\"\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LogoutPage","import { useState, useEffect, useReducer } from \"react\"\r\n\r\nimport * as API from \"../config/api.js\"\r\n\r\nfunction useAPIData(props) {\r\n    const method = typeof props === \"string\" ? API[props] : API[props.method].bind(null, props.data)\r\n\r\n    if(!method) {\r\n        throw new Error(\"API Method \" + (props.method || props) + \" not found\")\r\n    }\r\n\r\n    const [isLoading, setIsLoading] = useState(!props.defaultValue)\r\n    const [data, setData] = useState(props.defaultValue)\r\n    const [reloadKey, reload] = useReducer((key) => key + 1, 0)\r\n\r\n    useEffect(() => {\r\n        if (props.defaultValue && reloadKey === 0) {\r\n            return\r\n        }\r\n\r\n        setIsLoading(true)\r\n\r\n        method()\r\n            .then(res => {\r\n                setData(res.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            })\r\n        // eslint-disable-next-line\r\n    }, [reloadKey])\r\n\r\n    return {\r\n        isLoading,\r\n        data,\r\n        reload\r\n    }\r\n}\r\n\r\nexport default useAPIData","import React from \"react\"\r\nimport { Paper, List, ListItem, ListItemText, Divider } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport LoadingIndicator from \"../components/LoadingIndicator.js\"\r\n\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    divider: {\r\n        margin: `0 ${theme.spacing(2)}px`\r\n    }\r\n}))\r\n\r\nfunction ActivitySelect({ filter = \"\", style, onClick }) {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data } = useAPIData(\"getAllActivities\")\r\n\r\n    if(isLoading) {\r\n        return <LoadingIndicator/>\r\n    }\r\n\r\n    const renderActivities = data.filter(activity => activity.name.toLowerCase().startsWith(filter.toLowerCase()))\r\n    \r\n    return (\r\n        <Paper elevation={3} className={classes.container} style={style}>\r\n            {renderActivities.length > 0 ? (\r\n                <List>\r\n                    {renderActivities.map((activity, i) => (\r\n                        <React.Fragment key={activity.id}>\r\n                            <ListItem button onClick={() => onClick(activity)}>\r\n                                <ListItemText>{activity.name}</ListItemText>\r\n                            </ListItem>\r\n\r\n                            {i < renderActivities.length - 1 && <Divider className={classes.divider} />}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </List>\r\n            ) : (\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText>No activities found</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            )}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ActivitySelect","import React, { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { TextField, Button, InputAdornment } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport * as icons from \"@material-ui/icons\"\r\n\r\nimport ActivitySelect from \"../ActivitySelect.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        margin: `${theme.spacing(1)}px 0`,\r\n\r\n        \"&:first-child\": {\r\n            marginTop: 0\r\n        }\r\n    },\r\n\r\n    submitButton: {\r\n        margin: \"8px 0 16px 0\"\r\n    }\r\n}))\r\n\r\nfunction ShortcutForm({ onSubmit }) {\r\n    const classes = useStyles()\r\n\r\n    const { register, watch, reset, getValues, setValue } = useForm()\r\n\r\n    const [activity, setActivity] = useState()\r\n\r\n    const handleActivitySelect = (activity) => {\r\n        setActivity(activity)\r\n        setValue(\"activity_name\", activity.name)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if(!activity) {\r\n            return\r\n        }\r\n\r\n        onSubmit({\r\n            icon: getValues(\"icon\"),\r\n            activity_id: activity.id\r\n        }).then(reset)\r\n    }\r\n\r\n    return (\r\n        <form noValidate className={classes.form}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Activity\"\r\n                name=\"activity_name\"\r\n                inputRef={register()}\r\n                className={classes.input}\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n            />\r\n\r\n            <ActivitySelect\r\n                filter={watch(\"activity_name\")}\r\n                style={{ display: !watch(\"activity_name\") && \"none\" }}\r\n                onClick={handleActivitySelect}\r\n            />\r\n\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Icon\"\r\n                name=\"icon\"\r\n                inputRef={register()}\r\n                className={classes.input}\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                InputProps={watch(\"icon\") && icons[watch(\"icon\")] ? {\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            { React.createElement(icons[watch(\"icon\")]) }\r\n                        </InputAdornment>\r\n                    )\r\n                } : {} }\r\n            />\r\n\r\n            <Button href=\"https://material-ui.com/components/material-icons/\" target=\"_blank\">\r\n                View available icons\r\n            </Button>\r\n\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={handleSubmit}\r\n                className={classes.submitButton}\r\n            >\r\n                Add\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ShortcutForm","import React from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent } from \"@material-ui/core\"\r\n\r\nimport ShortcutForm from \"../Forms/ShortcutForm.js\"\r\nimport { createShortcut } from \"../../config/api.js\"\r\n\r\nfunction CreateShortcutDialog({ open, onClose }) {\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            createShortcut(values).then(() => {\r\n                resolve()\r\n                onClose()\r\n            })\r\n            .catch(error => console.error(error))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Create Shortcut</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <ShortcutForm onSubmit={handleSubmit}/>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CreateShortcutDialog","import React, { useState } from \"react\"\r\nimport { Chip } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\n\r\nimport CreateShortcutDialog from \"./Dialogs/CreateShortcutDialog.js\"\r\nimport LoadingIndicator from \"./LoadingIndicator.js\"\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\nimport { deleteShortcut } from \"../config/api.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginBottom: theme.spacing(2),\r\n        overflowX: \"scroll\",\r\n        display: \"flex\"\r\n    },\r\n\r\n    chip: {\r\n        backgroundColor: \"#4B4B57\",\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nfunction Shortcuts({ onClick }) {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data, reload } = useAPIData(\"getAllShortcuts\")\r\n\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n\r\n    const handleDelete = (shortcut) => {\r\n        deleteShortcut(shortcut)\r\n            .then(reload)\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        setIsCreateModalOpen(true)\r\n    }\r\n\r\n    const handleCreateModalClose = () => {\r\n        setIsCreateModalOpen(false)\r\n        reload()\r\n    }\r\n\r\n    if(isLoading) {\r\n        return <LoadingIndicator/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {data.map(shortcut => (\r\n                <Chip\r\n                    icon={shortcut.icon && React.createElement(shortcut.icon)}\r\n                    label={shortcut.activity.name}\r\n                    onClick={() => onClick(shortcut.activity)}\r\n                    onDelete={() => handleDelete(shortcut)}\r\n                    className={classes.chip}\r\n                    clickable\r\n                    key={shortcut.id}\r\n                />\r\n            ))}\r\n\r\n            <Chip\r\n                icon={<AddIcon/>}\r\n                label=\"Add Shortcut\"\r\n                onClick={handleAdd}\r\n                className={classes.chip}\r\n                clickable\r\n            />\r\n\r\n            <CreateShortcutDialog\r\n                open={isCreateModalOpen}\r\n                onClose={handleCreateModalClose}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shortcuts","import moment from \"moment\"\r\n\r\n// Sort performed activities by finished_at DESC\r\nexport function sortActivities(activities = []) {\r\n    return activities.sort((a, b) => b.finished_at.unix() - a.finished_at.unix())\r\n}\r\n\r\n// Source: https://stackoverflow.com/questions/4770025/how-to-disable-scrolling-temporarily\r\nfunction preventDefault(event) {\r\n    event.preventDefault()\r\n}\r\n\r\nconst options = {\r\n    passive: false\r\n}\r\n\r\n// Prevent scrolling of window\r\nexport function preventTouchScrolling() {\r\n    window.addEventListener(\"touchmove\", preventDefault, options)\r\n}\r\n\r\n// Release scrolling of window\r\nexport function releaseTouchScrolling() {\r\n    window.removeEventListener(\"touchmove\", preventDefault, options)\r\n}\r\n\r\n// Get the x, y position from event (cursor, touch)\r\nexport function getPositionFromEvent(event) {\r\n    return event.touches ? {\r\n        x: event.touches[0].clientX,\r\n        y: event.touches[0].clientY\r\n    } : {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }\r\n}\r\n\r\n// Round minutes to nearest given value\r\nexport function roundMinutesTo(time, minutes) {\r\n    const ms = minutes * 60 * 1000\r\n    return moment(Math.round((+time) / ms) * ms)\r\n}","import React, { useState } from \"react\"\r\nimport moment from \"moment\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { Typography, TextField, Button } from \"@material-ui/core\"\r\nimport { TimePicker } from \"@material-ui/pickers\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Shortcuts from \"../Shortcuts.js\"\r\nimport ActivitySelect from \"../ActivitySelect.js\"\r\nimport { roundMinutesTo } from \"../../utils\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        opacity: .87\r\n    },\r\n\r\n    primaryInputs: {\r\n        display: \"flex\",\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        margin: `${theme.spacing(1)}px 0`\r\n    },\r\n\r\n    timeDisplay: {\r\n        width: theme.spacing(8),\r\n        marginLeft: theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        fontSize: 20\r\n    },\r\n\r\n    submitButton: {\r\n        margin: \"8px 0 16px 0\"\r\n    }\r\n}))\r\n\r\nfunction PerfomedActivityForm({ onSubmit, defaultValues, title = true, submitButton = false }) {\r\n    const classes = useStyles()\r\n\r\n    const { register, control, watch, reset, getValues } = useForm({\r\n        defaultValues: {\r\n            finished_at: roundMinutesTo(moment(), 5),\r\n            ...defaultValues\r\n        }\r\n    })\r\n\r\n    const [isDatePickerOpen, setIsDatePickerOpen] = useState(false)\r\n\r\n    const handleSubmit = (activity) => {\r\n        const finished_at = getValues(\"finished_at\").format(\"YYYY-MM-DD HH:mm\")\r\n\r\n        onSubmit({\r\n            activity_id: activity?.id || defaultValues.activity_id,\r\n            finished_at\r\n        }).then(reset)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {title && <Typography variant=\"subtitle1\" className={classes.title}>Register Activity</Typography> }\r\n\r\n            <form noValidate>\r\n                <div className={classes.primaryInputs}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"Activity\"\r\n                        name=\"activity_name\"\r\n                        inputRef={register()}\r\n                        className={classes.input}\r\n                        fullWidth\r\n                        autoComplete=\"off\"\r\n                    />\r\n\r\n                    <div className={classes.timeDisplay} onClick={() => setIsDatePickerOpen(true)}>\r\n                        {watch(\"finished_at\").format(\"HH:mm\")}\r\n                    </div>\r\n\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"finished_at\"\r\n                        render={({ onChange, value }) => (\r\n                            <TimePicker\r\n                                value={value}\r\n                                open={isDatePickerOpen}\r\n                                onOpen={() => setIsDatePickerOpen(true)}\r\n                                onClose={() => setIsDatePickerOpen(false)}\r\n                                onChange={onChange}\r\n                                ampm={false}\r\n                                style={{ display: \"none\" }}\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n\r\n                <ActivitySelect\r\n                    filter={watch(\"activity_name\")}\r\n                    style={{ display: !watch(\"activity_name\") && \"none\" }}\r\n                    onClick={handleSubmit}\r\n                />\r\n\r\n                <Shortcuts onClick={handleSubmit} />\r\n\r\n                {submitButton && (\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        onClick={handleSubmit}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                )}\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PerfomedActivityForm","import React, { useState, useRef } from \"react\"\r\n\r\nimport { preventTouchScrolling, releaseTouchScrolling, getPositionFromEvent } from \"../utils\"\r\n\r\nfunction Draggable({\r\n    children,\r\n    onDragStart = () => {},\r\n    onDrag = () => {},\r\n    onDragStop = () => {}\r\n}) {\r\n    const lastPos = useRef()\r\n\r\n    const [isStart, setIsStart] = useState(false)\r\n    const [isDraggingDisabled, setIsDraggingDisabled] = useState(false)\r\n    \r\n    const handleDragStart = (event) => {\r\n        const position = getPositionFromEvent(event)\r\n        lastPos.current = position\r\n\r\n        onDragStart(position)\r\n\r\n        setIsStart(true)\r\n    }\r\n\r\n    const handleDrag = (event) => {\r\n        if(isDraggingDisabled) {\r\n            return\r\n        }\r\n\r\n        const pos = getPositionFromEvent(event)\r\n\r\n        pos.deltaX = pos.x - lastPos.current.x\r\n        pos.deltaY = pos.y - lastPos.current.y\r\n\r\n        if(isStart) {\r\n            if(Math.abs(pos.deltaY) >= Math.abs(pos.deltaX)) {\r\n                setIsDraggingDisabled(true)\r\n                return\r\n            }\r\n\r\n            preventTouchScrolling()\r\n\r\n            setIsStart(false)\r\n        }\r\n\r\n        onDrag(pos)\r\n\r\n        lastPos.current = pos\r\n    }\r\n\r\n    const handleDragStop = () => {\r\n        releaseTouchScrolling()\r\n\r\n        if(isDraggingDisabled) {\r\n            setIsDraggingDisabled(false)\r\n        }\r\n\r\n        onDragStop()\r\n    }\r\n\r\n    return (\r\n        React.cloneElement(React.Children.only(children), {\r\n            onMouseDown: handleDragStart,\r\n            onMouseMove: handleDrag,\r\n            onMouseUp: handleDragStop,\r\n\r\n            onTouchStart: handleDragStart,\r\n            onTouchMove: handleDrag,\r\n            onTouchEnd: handleDragStop\r\n        })\r\n    )\r\n}\r\n\r\nexport default Draggable","import React, { useRef, useState, useEffect } from \"react\"\r\nimport anime from \"animejs\"\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\n\r\nimport Draggable from \"./Draggable.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    icon: {\r\n        position: \"absolute\",\r\n        color: \"#000\"\r\n    }\r\n}))\r\n\r\nfunction Swipeable({ children, swipeLeftConfig, swipeRightConfig, onSwipeRight, onSwipeLeft }) {\r\n    const theme = useTheme()\r\n    \r\n    const classes = useStyles()\r\n\r\n    const containerRef = useRef()\r\n    const childRef = useRef()\r\n\r\n    const [position, setPosition] = useState({ x: 0, y: 0 })\r\n    const [icon, setIcon] = useState()\r\n\r\n    swipeLeftConfig = {\r\n        color: theme.palette.error.dark,\r\n        icon: DeleteIcon,\r\n        moveOutOfScreen: true,\r\n        ...swipeLeftConfig\r\n    }\r\n\r\n    swipeRightConfig = {\r\n        color: theme.palette.primary.main,\r\n        icon: EditIcon,\r\n        moveOutOfScreen: false,\r\n        ...swipeRightConfig\r\n    }\r\n\r\n    const moveToInitialPosition = () => {\r\n        anime({\r\n            targets: childRef.current,\r\n            translateX: 0,\r\n            duration: 200,\r\n            easing: \"easeOutSine\",\r\n            autoplay: true,\r\n            complete: () => setPosition({ x: 0, y: 0 })\r\n        })\r\n    }\r\n\r\n    const moveOutOfScreen = (sign = 1) => {\r\n        return new Promise(resolve => {\r\n            anime({\r\n                targets: childRef.current,\r\n                translateX: childRef.current.offsetWidth * sign,\r\n                duration: 150,\r\n                easing: \"easeOutSine\",\r\n                autoplay: true,\r\n                complete: resolve\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSwipeLeft = () => {\r\n        const width = childRef.current.offsetWidth\r\n\r\n        if(position.x <= width / -2) {\r\n            if (swipeLeftConfig.moveOutOfScreen) {\r\n                moveOutOfScreen(-1).then(onSwipeLeft)\r\n            } else {\r\n                moveToInitialPosition()\r\n                onSwipeLeft()\r\n            }\r\n        } else {\r\n            moveToInitialPosition()\r\n        }\r\n    }\r\n\r\n    const handleSwipeRight = () => {\r\n        const width = childRef.current.offsetWidth\r\n\r\n        if (position.x >= width / 2) {\r\n            if (swipeRightConfig.moveOutOfScreen) {\r\n                moveOutOfScreen(1)\r\n                onSwipeRight()\r\n            } else {\r\n                moveToInitialPosition()\r\n                onSwipeRight()\r\n            }\r\n        } else {\r\n            moveToInitialPosition()\r\n        }\r\n    }\r\n\r\n    const handleDrag = (pos) => {\r\n        const newX = position.x + pos.deltaX\r\n\r\n        if((newX > 0 && !onSwipeRight) || (newX < 0 && !onSwipeLeft)) {\r\n            return\r\n        }\r\n\r\n        setPosition({\r\n            ...position,\r\n            x: newX\r\n        })\r\n    }\r\n\r\n    const handleDragStop = () => {\r\n        if(position.x < 0) {\r\n            handleSwipeLeft()\r\n        } else if (position.x > 0) {\r\n            handleSwipeRight()\r\n        }\r\n    }\r\n\r\n    const setColor = (color) => containerRef.current.style.backgroundColor = color\r\n\r\n    const applyHighlight = () => {\r\n        childRef.current.style.transition = \"box-shadow 100ms linear\"\r\n        childRef.current.style.boxShadow = theme.shadows[\"2\"]\r\n        childRef.current.style.zIndex = \"10\"\r\n    }\r\n\r\n    const removeHighlight = () => {\r\n        childRef.current.style.boxShadow = null\r\n        childRef.current.style.zIndex = null\r\n    }\r\n    \r\n    const roundCorners = (side) => {\r\n        childRef.current.style.borderRadius = side === \"right\" ? `0 ${theme.spacing(1)}px ${theme.spacing(1)}px 0` : `${theme.spacing(1)}px 0 0 ${theme.spacing(1)}px`\r\n    }\r\n\r\n    useEffect(() => {\r\n        childRef.current.style.transform = `translateX(${position.x}px)`\r\n\r\n        if(position.x !== 0 || position.y !== 0) {\r\n            applyHighlight()\r\n        } else {\r\n            removeHighlight()\r\n        }\r\n\r\n        if(position.x < 0) {\r\n            roundCorners(\"right\")\r\n            setColor(swipeLeftConfig.color || \"\")\r\n            setIcon(swipeLeftConfig.icon)\r\n        } else if (position.x > 0) {\r\n            roundCorners(\"left\")\r\n            setColor(swipeRightConfig.color || \"\")\r\n            setIcon(swipeRightConfig.icon)\r\n        } else {\r\n            setColor(null)\r\n            setIcon(null)\r\n        }\r\n        \r\n        // eslint-disable-next-line\r\n    }, [position, swipeRightConfig, swipeLeftConfig])\r\n\r\n    return (\r\n        <div ref={containerRef} className={classes.container}>\r\n            {icon && React.createElement(icon, {\r\n                className: classes.icon,\r\n                style: {\r\n                    right: position.x < 0 ? theme.spacing(2) : \"null\",\r\n                    left: position.x > 0 ? theme.spacing(2) : \"null\"\r\n                }\r\n            })}\r\n\r\n            <Draggable\r\n                onDrag={handleDrag}\r\n                onDragStop={handleDragStop}\r\n            >\r\n                { React.cloneElement(React.Children.only(children), {\r\n                    ref: childRef\r\n                }) }\r\n            </Draggable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Swipeable ","import React from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent } from \"@material-ui/core\"\r\n\r\nimport PerformedActivityForm from \"../Forms/PerfomedActivityForm.js\"\r\nimport { updatePerformedActivity } from \"../../config/api.js\"\r\n\r\nfunction EditPerformedActivityDialog({ open, onClose, data }) {\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            updatePerformedActivity({\r\n                ...values,\r\n                id: data.id\r\n            }).then(() => {\r\n                resolve()\r\n                onClose()\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Edit Entry</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <PerformedActivityForm\r\n                    title={false}\r\n                    submitButton={true}\r\n                    defaultValues={{\r\n                        activity_name: data.activity.name,\r\n                        activity_id: data.activity.id,\r\n                        finished_at: data.finished_at,\r\n                    }}\r\n                    onSubmit={handleSubmit}\r\n                />\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditPerformedActivityDialog","import React, { useState, useMemo, useImperativeHandle } from \"react\"\r\nimport { Paper, List, ListItem, ListItemText } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport LoadingIndicator from \"./LoadingIndicator.js\"\r\nimport Swipeable from \"./Swipeable.js\"\r\nimport EditPerformedActivityDialog from \"./Dialogs/EditPerformedActivityDialog.js\"\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\nimport { sortActivities } from \"../utils\"\r\nimport { deletePerformedActivity } from \"../config/api.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        overflowX: \"hidden\",\r\n        width: \"100%\"\r\n    },\r\n\r\n    item: {\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n\r\n    itemInnerWrapper: {\r\n        display: \"flex\",\r\n        width: \"100%\"\r\n    },\r\n\r\n    itemPrimary: {\r\n        flexGrow: 1\r\n    },\r\n\r\n    itemSecondary: {\r\n        height: 56,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n\r\n    time: {\r\n        fontSize: 16\r\n    }\r\n}))\r\n\r\nfunction Entry({ entry, reloadList }) {\r\n    const classes = useStyles()\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false)\r\n\r\n    const handleDelete = () => {\r\n        deletePerformedActivity(entry)\r\n            .then(() => reloadList())\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setIsEditDialogOpen(true)\r\n    }\r\n\r\n    const handleEditDialogClose = () => {\r\n        setIsEditDialogOpen(false)\r\n        reloadList()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Swipeable onSwipeLeft={handleDelete} onSwipeRight={handleEdit}>\r\n                <ListItem className={classes.item}>\r\n                    <div className={classes.itemInnerWrapper}>\r\n                        <div className={classes.itemPrimary}>\r\n                            <ListItemText primary={entry.activity.name} secondary={entry.activity.category?.name} />\r\n                        </div>\r\n\r\n                        <div className={classes.itemSecondary}>\r\n                            <span className={classes.time}>\r\n                                {entry.finished_at.format(\"HH:mm\")}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n            </Swipeable>\r\n\r\n            <EditPerformedActivityDialog\r\n                data={entry}\r\n                open={isEditDialogOpen}\r\n                onClose={handleEditDialogClose}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction PerformedActivitesForDate({ date, defaultValue, style }, ref) {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data, reload } = useAPIData({\r\n        method: \"getPerformedActivitiesByDate\",\r\n        defaultValue,\r\n        data: {\r\n            date: date.format(\"YYYY-MM-DD\")\r\n        }\r\n    })\r\n    \r\n    const activities = useMemo(() => sortActivities(data), [data])\r\n\r\n    useImperativeHandle(ref, () => ({ reload }), [reload])\r\n\r\n    if(isLoading) {\r\n        return <LoadingIndicator/>\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.container} style={style}>\r\n            {activities.length > 0 ? (\r\n                <List>\r\n                    {activities.map((entry, i) => (\r\n                        <Entry entry={entry} reloadList={reload} key={entry.id}/>\r\n                    ))}\r\n                </List>\r\n            ) : (\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText>No entries</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            )}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(PerformedActivitesForDate)","import React, { useRef } from \"react\"\r\nimport moment from \"moment\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\nimport PerformedActivityForm from \"../components/Forms/PerfomedActivityForm.js\"\r\nimport PerformedActivitesForDate from \"../components/PerformedActivitesForDate.js\"\r\nimport { createPerformedActivity } from \"../config/api.js\"\r\n\r\nfunction TodayPage() {\r\n    const list = useRef()\r\n\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            createPerformedActivity(values)\r\n                .then(() => {\r\n                    list.current.reload()\r\n                    resolve()\r\n                }).catch(error => {\r\n                    console.error(error)\r\n                })\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            HeaderProps={{\r\n                title: \"Today\"\r\n            }}\r\n        >\r\n            <PerformedActivityForm onSubmit={handleSubmit}/>\r\n\r\n            <PerformedActivitesForDate date={moment()} ref={list}/>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default TodayPage","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { Accordion, AccordionSummary, AccordionDetails, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\nimport PerformedActivitiesForDate from \"../components/PerformedActivitesForDate.js\"\r\nimport LoadingIndicator from \"../components/LoadingIndicator.js\"\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    accordionDetails: {\r\n        padding: 0\r\n    }\r\n}))\r\n\r\nfunction AllTimePage() {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data } = useAPIData(\"getAllPerformedActivitiesByDate\")\r\n\r\n    return (\r\n        <Layout\r\n            HeaderProps={{\r\n                title: \"All Time\"\r\n            }}\r\n        >\r\n            <div className={classes.list}>\r\n                {isLoading ? <LoadingIndicator /> : (\r\n                    Object.keys(data).map(date => {\r\n                        date = moment(date, \"YYYY-DD-MM\")\r\n\r\n                        return (\r\n                            <Accordion TransitionProps={{ unmountOnExit: true }} key={date}>\r\n                                <AccordionSummary>\r\n                                    <Typography variant=\"subtitle1\">{date.format(\"DD.MM.YYYY\")}</Typography>\r\n                                </AccordionSummary>\r\n\r\n                                <AccordionDetails classes={{ root: classes.accordionDetails }}>\r\n                                    <PerformedActivitiesForDate\r\n                                        date={date}\r\n                                        defaultValue={data[date]}\r\n                                    />\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        )\r\n                    })\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AllTimePage","import React from \"react\"\r\nimport { Paper, List, ListItem, ListItemText, Divider } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport LoadingIndicator from \"../components/LoadingIndicator.js\"\r\n\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    divider: {\r\n        margin: `0 ${theme.spacing(2)}px`\r\n    }\r\n}))\r\n\r\nfunction CategorySelect({ filter = \"\", style, onClick }) {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data } = useAPIData(\"getAllCategories\")\r\n\r\n    if (isLoading) {\r\n        return <LoadingIndicator />\r\n    }\r\n\r\n    const renderCategories = data.filter(category => category.name.toLowerCase().startsWith(filter.toLowerCase()))\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.container} style={style}>\r\n            {renderCategories.length > 0 ? (\r\n                <List>\r\n                    {renderCategories.map((category, i) => (\r\n                        <React.Fragment key={category.id}>\r\n                            <ListItem button onClick={() => onClick(category)}>\r\n                                <ListItemText>{category.name}</ListItemText>\r\n                            </ListItem>\r\n\r\n                            {i < renderCategories.length - 1 && <Divider className={classes.divider} />}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </List>\r\n            ) : (\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText>No categories found</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            )}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CategorySelect","import React, { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Typography, TextField, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport CategorySelect from \"../CategorySelect.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        opacity: .87\r\n    },\r\n\r\n    input: {\r\n        margin: `${theme.spacing(1)}px 0`\r\n    },\r\n\r\n    submitButton: {\r\n        margin: \"8px 0 16px 0\"\r\n    }\r\n}))\r\n\r\nfunction ActivityForm({ onSubmit, defaultValues, title = true, showAllCategories = false, submitText = \"Create\" }) {\r\n    const classes = useStyles()\r\n\r\n    const { register, watch, reset, getValues, setValue } = useForm({ defaultValues })\r\n\r\n    const [categoryId, setCategoryId] = useState()\r\n\r\n    const handleCategorySelect = (category) => {\r\n        setCategoryId(category.id)\r\n        setValue(\"category_name\", category.name)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const values = getValues()\r\n\r\n        if(!values.name || !categoryId) {\r\n            return\r\n        }\r\n\r\n        onSubmit({\r\n            name: values.name,\r\n            category_id: categoryId\r\n        }).then(reset)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {title && <Typography variant=\"subtitle1\" className={classes.title}>Create Activity</Typography>}\r\n\r\n            <form noValidate>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    inputRef={register()}\r\n                    className={classes.input}\r\n                    fullWidth\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Category\"\r\n                    name=\"category_name\"\r\n                    inputRef={register()}\r\n                    className={classes.input}\r\n                    fullWidth\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                <CategorySelect\r\n                    filter={watch(\"category_name\")}\r\n                    style={{ display: !showAllCategories && !watch(\"category_name\") && \"none\" }}\r\n                    onClick={handleCategorySelect}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={handleSubmit}\r\n                    className={classes.submitButton}\r\n                >\r\n                    { submitText }\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActivityForm","import React from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent } from \"@material-ui/core\"\r\n\r\nimport ActivityForm from \"../Forms/ActivityForm.js\"\r\nimport { updateActivity } from \"../../config/api.js\"\r\n\r\nfunction EditActivityDialog({ open, onClose, data }) {\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            updateActivity({\r\n                ...values,\r\n                id: data.id\r\n            }).then(() => {\r\n                resolve()\r\n                onClose()\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Edit Activity</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <ActivityForm\r\n                    title={false}\r\n                    showAllCategories\r\n                    submitText=\"Save\"\r\n                    defaultValues={{\r\n                        name: data.name,\r\n                        category_id: data.category.id,\r\n                        category_name: data.category.name\r\n                    }}\r\n                    onSubmit={handleSubmit}\r\n                />\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditActivityDialog","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Paper, List, ListItem, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport LoadingIndicator from \"./LoadingIndicator.js\"\r\nimport Swipeable from \"./Swipeable.js\"\r\nimport EditActivityDialog from \"./Dialogs/EditActivityDialog.js\"\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\nimport { deleteActivity } from \"../config/api.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        padding: 0,\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    listItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n\r\n    secondary: {\r\n        fontSize: 14,\r\n        lineHeight: 2,\r\n        opacity: .87\r\n    }\r\n}))\r\n\r\nfunction Entry({ data, reloadList }) {\r\n    const classes = useStyles()\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false)\r\n\r\n    const handleDelete = () => {\r\n        deleteActivity({ id: data.id })\r\n            .then(reloadList)\r\n            .catch(console.error)\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setIsEditDialogOpen(true)\r\n    }\r\n\r\n    const handleEditDialogClose = () => {\r\n        setIsEditDialogOpen(false)\r\n        reloadList()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Swipeable onSwipeLeft={handleDelete} onSwipeRight={handleEdit} key={data.id}>\r\n                <ListItem className={classes.listItem}>\r\n                    <Typography variant=\"subtitle1\">{data.name}</Typography>\r\n\r\n                    <span className={classes.secondary}>{data.category.name}</span>\r\n                </ListItem>\r\n            </Swipeable>\r\n\r\n            <EditActivityDialog\r\n                open={isEditDialogOpen}\r\n                onClose={handleEditDialogClose}\r\n                data={data}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ActivityList(props, ref) {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data, reload } = useAPIData(\"getAllActivities\")\r\n\r\n    useImperativeHandle(ref, () => ({ reload }), [reload])\r\n\r\n    if (isLoading) {\r\n        return <LoadingIndicator />\r\n    }\r\n\r\n    data.sort((a, b) => a.name.localeCompare(b.name))\r\n\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <List>\r\n                {data.map(activity => (\r\n                    <Entry data={activity} reloadList={reload} key={activity.id}/>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(ActivityList)","import React, { useRef } from \"react\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\nimport ActivityForm from \"../components/Forms/ActivityForm.js\"\r\nimport ActivityList from \"../components/ActivityList.js\"\r\nimport { createActivity } from \"../config/api.js\"\r\n\r\nfunction ActivitiesPage() {\r\n    const list = useRef()\r\n\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            createActivity(values)\r\n                .then(() => {\r\n                    list.current.reload()\r\n                    resolve()\r\n                })\r\n                .catch(error => console.error(error))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            HeaderProps={{\r\n                title: \"Activities\"\r\n            }}\r\n        >\r\n            <ActivityForm onSubmit={handleSubmit}/>\r\n\r\n            <ActivityList ref={list}/>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ActivitiesPage","import React from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Typography, TextField, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        opacity: .87\r\n    },\r\n\r\n    input: {\r\n        margin: `${theme.spacing(1)}px 0`\r\n    },\r\n\r\n    submitButton: {\r\n        margin: \"8px 0 16px 0\"\r\n    }\r\n}))\r\n\r\nfunction CategoryForm({ onSubmit, defaultValues, title = true, submitText = \"Create\" }) {\r\n    const classes = useStyles()\r\n\r\n    const { register, reset, getValues } = useForm({ defaultValues })\r\n\r\n\r\n    const handleSubmit = () => {\r\n        const values = getValues()\r\n\r\n        if (!values.name) {\r\n            return\r\n        }\r\n\r\n        onSubmit(values).then(reset)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {title && <Typography variant=\"subtitle1\" className={classes.title}>Create Category</Typography>}\r\n\r\n            <form noValidate>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    inputRef={register()}\r\n                    className={classes.input}\r\n                    fullWidth\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={handleSubmit}\r\n                    className={classes.submitButton}\r\n                >\r\n                    { submitText }\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryForm","import React from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent } from \"@material-ui/core\"\r\n\r\nimport CategoryForm from \"../Forms/CategoryForm.js\"\r\nimport { updateCategory } from \"../../config/api.js\"\r\n\r\nfunction EditActivityDialog({ open, onClose, data }) {\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            updateCategory({\r\n                ...values,\r\n                id: data.id\r\n            }).then(() => {\r\n                resolve()\r\n                onClose()\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Edit Category</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <CategoryForm\r\n                    title={false}\r\n                    defaultValues={data}\r\n                    submitText=\"Save\"\r\n                    onSubmit={handleSubmit}\r\n                />\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditActivityDialog","import React, { useState, useImperativeHandle } from \"react\"\r\nimport { Paper, List, ListItem, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport LoadingIndicator from \"./LoadingIndicator.js\"\r\nimport Swipeable from \"./Swipeable.js\"\r\nimport EditCategoryDialog from \"./Dialogs/EditCategoryDialog.js\"\r\nimport useAPIData from \"../utils/useAPIData.js\"\r\nimport { deleteCategory } from \"../config/api.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        padding: 0,\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    listItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n\r\n    secondary: {\r\n        fontSize: 14,\r\n        lineHeight: 2,\r\n        opacity: .87\r\n    }\r\n}))\r\n\r\nfunction Entry({ data, reloadList }) {\r\n    const classes = useStyles()\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false)\r\n\r\n    const handleDelete = () => {\r\n        deleteCategory({ id: data.id })\r\n            .then(reloadList)\r\n            .catch(console.error)\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setIsEditDialogOpen(true)\r\n    }\r\n\r\n    const handleEditDialogClose = () => {\r\n        setIsEditDialogOpen(false)\r\n        reloadList()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Swipeable onSwipeLeft={handleDelete} onSwipeRight={handleEdit} key={data.id}>\r\n                <ListItem className={classes.listItem}>\r\n                    <Typography variant=\"subtitle1\">{data.name}</Typography>\r\n                </ListItem>\r\n            </Swipeable>\r\n\r\n            <EditCategoryDialog\r\n                open={isEditDialogOpen}\r\n                onClose={handleEditDialogClose}\r\n                data={data}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CategoryList(props, ref) {\r\n    const classes = useStyles()\r\n\r\n    const { isLoading, data, reload } = useAPIData(\"getAllCategories\")\r\n\r\n    useImperativeHandle(ref, () => ({ reload }), [reload])\r\n\r\n    if (isLoading) {\r\n        return <LoadingIndicator />\r\n    }\r\n\r\n    data.sort((a, b) => a.name.localeCompare(b.name))\r\n\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <List>\r\n                {data.map(category => (\r\n                    <Entry data={category} reloadList={reload} key={category.id} />\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(CategoryList)","import React, { useRef } from \"react\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\nimport CategoryForm from \"../components/Forms/CategoryForm.js\"\r\nimport CategoryList from \"../components/CategoryList.js\"\r\nimport { createCategory } from \"../config/api.js\"\r\n\r\nfunction CategoriesPage() {\r\n    const list = useRef()\r\n\r\n    const handleSubmit = (values) => {\r\n        return new Promise(resolve => {\r\n            createCategory(values)\r\n                .then(() => {\r\n                    list.current.reload()\r\n                    resolve()\r\n                })\r\n                .catch(error => console.error(error))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            HeaderProps={{\r\n                title: \"Categories\"\r\n            }}\r\n        >\r\n            <CategoryForm onSubmit={handleSubmit} />\r\n\r\n            <CategoryList ref={list} />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CategoriesPage","import React from \"react\"\r\n\r\nimport Layout from \"../components/Layout.js\"\r\n\r\nfunction AnalysisPage() {\r\n    return (\r\n        <Layout\r\n            HeaderProps={{\r\n                title: \"Analysis\"\r\n            }}\r\n        >\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AnalysisPage","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\r\n\r\nimport AuthPage from \"../pages/AuthPage.js\"\r\nimport LogoutPage from \"../pages/LogoutPage.js\"\r\nimport TodayPage from \"../pages/TodayPage.js\"\r\nimport AllTimePage from \"../pages/AllTimePage.js\"\r\nimport ActivitiesPage from \"../pages/ActivitiesPage.js\"\r\nimport CategoriesPage from \"../pages/CategoriesPage.js\"\r\nimport AnalysisPage from \"../pages/AnalysisPage.js\"\r\n\r\nfunction Router() {\r\n    const isLoggedIn = useSelector(store => store.auth.isLoggedIn)\r\n    \r\n    if(!isLoggedIn) {\r\n        return <AuthPage/>\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter basename=\"/app\">\r\n            <Switch>\r\n                <Route path=\"/profile\">\r\n                    <TodayPage/>\r\n                </Route>\r\n\r\n                <Route path=\"/logout\">\r\n                    <LogoutPage/>\r\n                </Route>\r\n\r\n                <Route path=\"/today\">\r\n                    <TodayPage/>\r\n                </Route>\r\n\r\n                <Route path=\"/all-time\">\r\n                    <AllTimePage/>\r\n                </Route>\r\n\r\n                <Route path=\"/activities\">\r\n                    <ActivitiesPage/>\r\n                </Route>\r\n\r\n                <Route path=\"/categories\">\r\n                    <CategoriesPage/>\r\n                </Route>\r\n\r\n                <Route path=\"/analysis\">\r\n                    <AnalysisPage/>\r\n                </Route>\r\n\r\n                <Route path=\"/\">\r\n                    <Redirect to=\"/today\"/>\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import React from \"react\"\r\nimport { CssBaseline } from \"@material-ui/core\"\r\n\r\nimport Router from \"./router/index.js\"\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <CssBaseline/>\r\n\r\n            <Router/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\"\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\"\nimport MomentUtils from \"@date-io/moment\"\n\nimport store from \"./store\"\nimport App from \"./App.js\"\nimport * as serviceWorker from \"./serviceWorker.js\"\nimport \"./index.css\"\n\nconst theme = createMuiTheme({\n    palette: {\n        theme: \"dark\",\n        type: \"dark\",\n\n        background: {\n            default: \"#282833\",\n            paper: \"#333340\"\n        },\n\n        primary: {\n            main: \"#BB86FC\",\n            variant: \"#3700B3\"\n        },\n\n        secondary: {\n            main: \"#03DAC5\"\n        },\n\n        error: {\n            main: \"#CF6679\"\n        }\n    }\n})\n\nif(process.env.NODE_ENV === \"development\") {\n    console.log(theme)\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <App/>\n            </MuiPickersUtilsProvider>\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}